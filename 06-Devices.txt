
**********
6 设备
**********

    Linux像大多数操作系统一样，通过叫做设备驱动(device drivers)的模块化的软件组
件与硬件交互。设备驱动从操作系统层面隐藏了每个硬件设备古怪的交互协议，并且允许系统使
用标准的接口与这些设备交互。
    在Linux里面，设备驱动是内核(kernel)的一部分，并且要么静态连接到内核，要么作为
内核模块按需加载。设备驱动作为内核的部分运行，并且不会直接访问用户进程。尽管如此，
Linux提供了一种进程可以与设备驱动交互的的机制，通过类似文件对象的操作，可以与硬件设
备交互。这些硬件设备对象出现在文件系统中，程序可以像普通的文件一样，打开、读、写他们。
使用Linux底层的I/O操作(Appendix B, "Low-Level I/O')或标准的C库的I/O操作，你
的程序就可以通过这些类似文件的对象与硬件设备交互。
    Linux也提供了几个文件对象直接与内核交互而不只是设备驱动。这些文件对象没有被链接
到硬件设备，相反的，它们提供了用于应用程序和系统编程中的各种类型的特定行为。

    当访问设备练习注意！
    本章中提供了直接访问Linux内核中正在运行的设备驱动的技术，并通过这些技术访问连接
    到当前系统的硬件设备。使用这些技术一定要小心，因为错误使用会造成GNU/Linux系统的
    损毁。
    请参考侧栏“Danger of Block Devices”


6.1 设备类型

    设备文件不是普通的文件 -- 它们不表示磁盘文件系统上的一块数据。相反的，对一个设备
文件数据的读或写，是与其对应的设备驱动的交互，并且从设备驱动又到了底层的设备。设备文
件有两种：
    .一种是 字符设备 表示硬件设备读/写序列化的字节数据流。串/并口、磁带驱动、终端设
      备和声卡都是字符设备。
    .一种是 块设备 表示硬件设备读写固定大小的数据块。不同于字符设备，块设备支持随机
      访问存储在设备上的数据。磁盘驱动就是一个块设备的例子。

    典型的应用程序永远不会使用块设备。然而磁盘驱动作为块设备的代表，每一个磁盘分区的
内容通常包含一个文件系统，而且这个文件系统被挂在到GNU/Linux的根文件系统树上。只有内
核代码需要直接访问这个块设备来实现了这个文件系统。而应用程序通过正常的文件和目录来访
问磁盘上的内容。

    块设备的危险
    块设备支持直接访问磁盘驱动数据。虽然大多数GNU/Linux系统都被配置为禁止noroot进程
    直接访问这些设备，但是一个root进程通过改变磁盘上的内容，能够造成严重的毁坏。通过
    写磁盘块设备，一个程序能修改或销毁文件系统的控制信息，甚至是磁盘分区表和主启动记
    录，因此致使一个驱动或整个系统不可用。访问这些设备一定要加倍小心。

    因此，应用程序总是会利用字符设备。在随后的章节我们会讨论几种。
    

6.2 设备编号

    Linux使用两种编号来标示设备：主设备编号 (major device number）和 次设备编号（
minor device number）。主设备编号指定了设备对应哪个驱动。从主设备编号到驱动的对应是
固定的，是Linux内核源码中的一部分。需要注意的是同样的主设备编号可能对应到两个不同的
驱动，一个是字符设备，一个是块设备。次要设备编号区分由单个驱动控制的各个设备或组件。
次要设备编号的含义取决于设备驱动。






















































































    
    
